
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CountriesScalarFieldEnum = {
  id: 'id',
  uid: 'uid',
  code: 'code',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Fill_in_blanksScalarFieldEnum = {
  id: 'id',
  question_id: 'question_id',
  fill_1: 'fill_1',
  ans_first_1: 'ans_first_1',
  ans_first_2: 'ans_first_2',
  ans_first_3: 'ans_first_3',
  fill_2: 'fill_2',
  ans_sec_1: 'ans_sec_1',
  ans_sec_2: 'ans_sec_2',
  ans_sec_3: 'ans_sec_3',
  fill_3: 'fill_3',
  ans_third_1: 'ans_third_1',
  ans_third_2: 'ans_third_2',
  ans_third_3: 'ans_third_3',
  fill_4: 'fill_4',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Finished_testsScalarFieldEnum = {
  id: 'id',
  test_id: 'test_id',
  fill_score: 'fill_score',
  mcqs_score: 'mcqs_score',
  five_choice_score: 'five_choice_score',
  total_score: 'total_score',
  test: 'test',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.M_c_q_sScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Model_has_permissionsScalarFieldEnum = {
  permission_id: 'permission_id',
  model_type: 'model_type',
  model_id: 'model_id'
};

exports.Prisma.Model_has_rolesScalarFieldEnum = {
  role_id: 'role_id',
  model_type: 'model_type',
  model_id: 'model_id'
};

exports.Prisma.ModulesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OptionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  question_id: 'question_id',
  is_correct: 'is_correct',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PermissionsScalarFieldEnum = {
  id: 'id',
  module_id: 'module_id',
  name: 'name',
  guard_name: 'guard_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Question_groupsScalarFieldEnum = {
  id: 'id',
  test_id: 'test_id',
  type: 'type',
  description: 'description',
  heading: 'heading',
  position: 'position',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Question_listsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuestionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  question_group_id: 'question_group_id',
  test_id: 'test_id',
  part: 'part',
  category: 'category',
  position: 'position',
  paragraph: 'paragraph',
  type: 'type',
  image_url: 'image_url',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Registeration_requestsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  country: 'country',
  type: 'type',
  plan: 'plan',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Role_has_permissionsScalarFieldEnum = {
  permission_id: 'permission_id',
  role_id: 'role_id'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  guard_name: 'guard_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TestsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  category: 'category',
  status: 'status',
  audio: 'audio',
  paragraph1: 'paragraph1',
  paragraph2: 'paragraph2',
  paragraph3: 'paragraph3',
  paragraph4: 'paragraph4',
  paragraph5: 'paragraph5',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_detailsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  contact_number: 'contact_number',
  pan: 'pan',
  ssn: 'ssn',
  passport_number: 'passport_number',
  medical_license_registration_number: 'medical_license_registration_number',
  gender: 'gender',
  dental_council_name: 'dental_council_name',
  building_name: 'building_name',
  locality_or_colony: 'locality_or_colony',
  city: 'city',
  state: 'state',
  country: 'country',
  postal_address: 'postal_address',
  pin_code: 'pin_code',
  door_number: 'door_number',
  plot_number: 'plot_number',
  road_number: 'road_number',
  dob: 'dob',
  license_issue_date: 'license_issue_date',
  start_date: 'start_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  partner_id: 'partner_id',
  businessunit_id: 'businessunit_id',
  branch_id: 'branch_id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  country: 'country',
  password: 'password',
  duration: 'duration',
  status: 'status',
  email_verified_at: 'email_verified_at',
  remember_token: 'remember_token',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.countriesOrderByRelevanceFieldEnum = {
  uid: 'uid',
  code: 'code',
  name: 'name'
};

exports.Prisma.fill_in_blanksOrderByRelevanceFieldEnum = {
  fill_1: 'fill_1',
  ans_first_1: 'ans_first_1',
  ans_first_2: 'ans_first_2',
  ans_first_3: 'ans_first_3',
  fill_2: 'fill_2',
  ans_sec_1: 'ans_sec_1',
  ans_sec_2: 'ans_sec_2',
  ans_sec_3: 'ans_sec_3',
  fill_3: 'fill_3',
  ans_third_1: 'ans_third_1',
  ans_third_2: 'ans_third_2',
  ans_third_3: 'ans_third_3',
  fill_4: 'fill_4'
};

exports.Prisma.finished_testsOrderByRelevanceFieldEnum = {
  fill_score: 'fill_score',
  mcqs_score: 'mcqs_score',
  five_choice_score: 'five_choice_score',
  total_score: 'total_score',
  test: 'test'
};

exports.Prisma.model_has_permissionsOrderByRelevanceFieldEnum = {
  model_type: 'model_type'
};

exports.Prisma.model_has_rolesOrderByRelevanceFieldEnum = {
  model_type: 'model_type'
};

exports.Prisma.modulesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.optionsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.permissionsOrderByRelevanceFieldEnum = {
  name: 'name',
  guard_name: 'guard_name'
};

exports.Prisma.question_groupsOrderByRelevanceFieldEnum = {
  description: 'description',
  heading: 'heading'
};

exports.Prisma.questionsOrderByRelevanceFieldEnum = {
  name: 'name',
  image_url: 'image_url'
};

exports.Prisma.registeration_requestsOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  country: 'country',
  type: 'type',
  plan: 'plan'
};

exports.Prisma.rolesOrderByRelevanceFieldEnum = {
  name: 'name',
  guard_name: 'guard_name'
};

exports.Prisma.testsOrderByRelevanceFieldEnum = {
  name: 'name',
  audio: 'audio',
  paragraph1: 'paragraph1',
  paragraph2: 'paragraph2',
  paragraph3: 'paragraph3',
  paragraph4: 'paragraph4',
  paragraph5: 'paragraph5'
};

exports.Prisma.user_detailsOrderByRelevanceFieldEnum = {
  contact_number: 'contact_number',
  pan: 'pan',
  ssn: 'ssn',
  passport_number: 'passport_number',
  medical_license_registration_number: 'medical_license_registration_number',
  gender: 'gender',
  dental_council_name: 'dental_council_name',
  building_name: 'building_name',
  locality_or_colony: 'locality_or_colony',
  city: 'city',
  state: 'state',
  country: 'country',
  postal_address: 'postal_address',
  pin_code: 'pin_code',
  door_number: 'door_number',
  plot_number: 'plot_number',
  road_number: 'road_number'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  country: 'country',
  password: 'password',
  duration: 'duration',
  status: 'status',
  remember_token: 'remember_token'
};


exports.Prisma.ModelName = {
  countries: 'countries',
  fill_in_blanks: 'fill_in_blanks',
  finished_tests: 'finished_tests',
  m_c_q_s: 'm_c_q_s',
  model_has_permissions: 'model_has_permissions',
  model_has_roles: 'model_has_roles',
  modules: 'modules',
  options: 'options',
  permissions: 'permissions',
  question_groups: 'question_groups',
  question_lists: 'question_lists',
  questions: 'questions',
  registeration_requests: 'registeration_requests',
  role_has_permissions: 'role_has_permissions',
  roles: 'roles',
  tests: 'tests',
  user_details: 'user_details',
  users: 'users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
